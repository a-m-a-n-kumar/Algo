
#Unbounded Knapsack
def UnbKnapsack(wt,val,W,n):
  dp = [[0 for i in range(W+1)] for j in range(n+1)]
  for i in range(1,n+1):
    for j in range(1,W+1):
      if wt[i-1] <= j:
        dp[i][j] = max(dp[i-1][j] , val[i-1]+dp[i][j-wt[i-1]])
      else:
        dp[i][j]=dp[i-1][j]
  return dp[n][W]
val = [10, 100, 120] 
wt = [100, 200, 25] 
W = 50
n=3
print(UnbKnapsack(wt,val,W,n))
